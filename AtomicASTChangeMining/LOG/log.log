2020-10-02 21:19:59 DEBUG PythonASTUtil:36 - Module(body=[ClassDef],)
2020-10-02 21:19:59 DEBUG PythonASTUtil:55 - Import and Alias Names : {}
2020-10-02 21:19:59 DEBUG PythonASTUtil:65 - ClassDef
2020-10-02 21:19:59 DEBUG MapPyExpressionsJDK:214 - 
    A class for archiving an Arkane species including its statmech data into .yml files
    
2020-10-02 21:19:59 WARN  MapPyStatementsTOJDK:124 - The node is not node added :"\n    A class for archiving an Arkane species including its statmech data into .yml files\n    ";

2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Name]
2020-10-02 21:19:59 WARN  MapPyStatementsTOJDK:124 - The node is not node added :i=12345;

2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Name]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyExpressionsJDK:214 - No species (or TS) or conformer was passed to the ArkaneSpecies object
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyExpressionsJDK:214 - 
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyStatementsTOJDK:223 - [Attribute]
2020-10-02 21:19:59 DEBUG MapPyExpressionsJDK:214 - %Y-%m-%d %H:%M
2020-10-02 21:19:59 DEBUG PythonASTUtil:71 - public class ArkaneSpecies extends RMGObject {
  void __init__(  ArkaneSpecies self){
    super(ArkaneSpecies,self);
    if ((conformer != None)) {
      self.conformer=conformer;
    }
 else     if ((label == None) && (species != None)) {
      boo=noo;
    }
 else {
      self.label=label;
    }
    if ((label == None) && (species != None)) {
      self.label=species.label;
    }
 else {
      self.label=label;
    }
    if ((species == None) && (conformer == None)) {
      throw new ValueError("No species (or TS) or conformer was passed to the ArkaneSpecies object");
    }
    self.author=author;
    self.level_of_theory=level_of_theory;
    self.model_chemistry=model_chemistry;
    self.frequency_scale_factor=frequency_scale_factor;
    self.use_hindered_rotors=use_hindered_rotors;
    self.use_bond_corrections=use_bond_corrections;
    self.atom_energies=atom_energies;
    self.xyz=xyz;
    self.molecular_weight=molecular_weight;
    self.symmetry_number=symmetry_number;
    self.charge=charge;
    self.multiplicity=multiplicity;
    self.is_ts=(one != None) && voo && cool || tool ? is_ts : isinstance(coo,boo);
    if (!self.is_ts) {
      self.chemkin_thermo_string=chemkin_thermo_string;
      self.smiles=smiles;
      self.adjacency_list=adjacency_list;
      self.inchi=inchi;
      self.inchi_key=inchi_key;
      self.transport_data=transport_data;
      self.energy_transfer_model=energy_transfer_model;
      self.thermo=thermo;
      self.thermo_data=thermo_data;
      self.formula=formula;
    }
 else {
      self.imaginary_frequency=None;
      self.reaction_label="";
      self.reactants=list();
      self.products=list();
    }
    if ((species != None)) {
      self.update_species_attributes(species);
    }
    self.RMG_version=(RMG_version != None) ? RMG_version : __version__;
    self.datetime=(datetime != None) ? datetime : time.strftime("%Y-%m-%d %H:%M");
  }
}

2020-10-02 21:19:59 DEBUG PythonASTUtil:73 - Start Char : 1912
